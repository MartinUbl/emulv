cmake_minimum_required(VERSION 3.5)

project(emulv_ui VERSION 1.0 LANGUAGES CXX)
set(UI_TARGET emulv_ui)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets)
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets)

set(PROJECT_SOURCES
#        ../main.cpp
        mainwindow.cpp
        mainwindow.h
        mainwindow.ui
        aboutwindow.cpp
        aboutwindow.h
        aboutwindow.ui
        disassemblyview.h
        disassemblyview.cpp
)

#Cele if smazat a nahradit pouze add_library(${UI_TARGET} SHARED ${PROJECT_SOURCES} ? To by vytvořilo knihovnu
#ze souborů definovaných výše, ale nejspíš je ještě třeba změnit na něco jiného než UI_TARGET, aby nedocházelo
#ke konflikut targetů
add_library(${UI_TARGET} SHARED ${PROJECT_SOURCES})

#K targetu vzniklém z PROJECT_SOURCES připojí QT widgets
target_link_libraries(${UI_TARGET} PRIVATE Qt${QT_VERSION_MAJOR}::Widgets)

set_target_properties(${UI_TARGET} PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER my.example.com
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

# Nainstaluje tento target do složky CMAKE_INSTALL_LIBDIR (?)
install(TARGETS ${UI_TARGET}
    BUNDLE DESTINATION ..
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR})

#Tohle asi nechceme? Nebo vložit do hlavního cmake file?
#if(QT_VERSION_MAJOR EQUAL 6)
#    qt_finalize_executable(${UI_TARGET})
#endif()
